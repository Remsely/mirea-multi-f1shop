-------------------------- DB INIT --------------------------

CREATE TABLE IF NOT EXISTS users
(
    id       BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email    VARCHAR(320) NOT NULL,
    password VARCHAR(320) NOT NULL,
    CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS products
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name        VARCHAR(320)  NOT NULL,
    category    VARCHAR(40)   NOT NULL,
    description VARCHAR(2000) NOT NULL,
    image_link  VARCHAR(1000) NOT NULL,
    price       REAL          NOT NULL,
    amount      INTEGER       NOT NULL,
    CONSTRAINT POSITIVE_PRODUCT_AMOUNT CHECK (amount >= 0),
    CONSTRAINT POSITIVE_PRODUCT_PRICE CHECK (price > 0)
);

CREATE TABLE IF NOT EXISTS cart_products
(
    user_id    BIGINT REFERENCES users (id)    NOT NULL,
    product_id BIGINT REFERENCES products (id) NOT NULL,
    amount     INTEGER                         NOT NULL,
    CONSTRAINT POSITIVE_CART_PRODUCT_AMOUNT CHECK (amount >= 0)
);

CREATE TABLE IF NOT EXISTS wishlist_products
(
    user_id    BIGINT REFERENCES users (id)    NOT NULL,
    product_id BIGINT REFERENCES products (id) NOT NULL
);

CREATE TABLE IF NOT EXISTS orders
(
    id                      BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id                 BIGINT REFERENCES users (id) NOT NULL,
    date                    TIMESTAMP                    NOT NULL,
    recipients_full_name    VARCHAR(100)                 NOT NULL,
    recipients_phone_number VARCHAR(16)                  NOT NULL,
    recipients_email        VARCHAR(320)                 NOT NULL,
    address                 VARCHAR(200)                 NOT NULL,
    intercom                VARCHAR(20)                  NOT NULL,
    comments                VARCHAR(200)
);

CREATE TABLE IF NOT EXISTS order_products
(
    order_id   BIGINT REFERENCES orders (id)   NOT NULL,
    product_id BIGINT REFERENCES products (id) NOT NULL,
    amount     INTEGER                         NOT NULL,
    price      REAL                            NOT NULL,
    CONSTRAINT POSITIVE_PRODUCT_PRICE CHECK (price > 0),
    CONSTRAINT POSITIVE_ORDER_PRODUCT_AMOUNT CHECK (amount >= 0)
);

-------------------------- TRIGGERS --------------------------

CREATE OR REPLACE FUNCTION add_product_to_wishlist_after_insert() RETURNS TRIGGER
    LANGUAGE plpgsql
AS
'
    BEGIN
        INSERT INTO wishlist_products (user_id, product_id)
        SELECT NEW.user_id,
               NEW.product_id
        WHERE NOT EXISTS (SELECT 1
                          FROM wishlist_products
                          WHERE user_id = NEW.user_id
                            AND product_id = NEW.product_id);
        RETURN NEW;
    END;
';

CREATE TRIGGER cart_after_insert
    AFTER INSERT
    ON cart_products
    FOR EACH ROW
EXECUTE FUNCTION add_product_to_wishlist_after_insert();
